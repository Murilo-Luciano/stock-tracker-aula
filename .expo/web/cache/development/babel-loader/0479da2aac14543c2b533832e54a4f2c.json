{"ast":null,"code":"var _jsxFileName = \"/home/igor/Documentos/Programa de Forma\\xE7\\xE3o Investtools/ReactNative/stock-tracker-aula/src/components/Button.tsx\";\nimport React from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function Button(_ref) {\n  var title = _ref.title,\n      onPress = _ref.onPress,\n      isLoading = _ref.isLoading;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, isLoading ? React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 22\n    }\n  }, title) : React.createElement(ActivityIndicator, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 65\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#00E676\",\n    borderRadius: 5,\n    padding: 8\n  },\n  title: {\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/igor/Documentos/Programa de Formação Investtools/ReactNative/stock-tracker-aula/src/components/Button.tsx"],"names":["React","Button","title","onPress","isLoading","styles","container","StyleSheet","create","backgroundColor","borderRadius","padding","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AASA,eAAe,SAASC,MAAT,OAAoD;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,MAAlBC,SAAkB,QAAlBA,SAAkB;AACjE,SACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAED,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,GAAG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BA,KAA5B,CAAH,GAA8C,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAE,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1D,CADF,CADF;AAQD;AAED,IAAMG,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,YAAY,EAAE,CAFL;AAGTC,IAAAA,OAAO,EAAE;AAHA,GADoB;AAM/BT,EAAAA,KAAK,EAAE;AACLU,IAAAA,SAAS,EAAE;AADN;AANwB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { ActivityIndicator, StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\n\ninterface Props{\n  title:string\n  isLoading:boolean\n  onPress:()=>{}\n}\n\nexport default function Button( {title, onPress, isLoading}:Props) {\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <View style={styles.container}>\n        {isLoading ? <Text style={styles.title}>{title}</Text>: <ActivityIndicator color={\"white\"} />\n        }\n      </View>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#00E676\",\n    borderRadius: 5,\n    padding: 8,\n  },\n  title: {\n    textAlign: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}