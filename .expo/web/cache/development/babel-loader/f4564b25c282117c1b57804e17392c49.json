{"ast":null,"code":"var _jsxFileName = \"/home/igor/Documentos/Programa de Forma\\xE7\\xE3o Investtools/ReactNative/stock-tracker-aula/src/screens/EquityListScreen.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { fetchCurrentMarketData, fetchPriceTrend } from \"../server\";\nimport companies from \"../utils/companies\";\nimport AddEquityButton from \"./AddEquityButton\";\nimport EquityItem from \"./EquityItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nvar initialSymbols = [\"BRML3\", \"PETR4\", \"IGTA3\"];\nexport default function EquityListContainer(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useSelector = useSelector(function (state) {\n    return state.equityList;\n  }),\n      symbols = _useSelector.symbols,\n      equities = _useSelector.equities;\n\n  var dispatch = useDispatch();\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(AddEquityButton, {\n          onAddEquity: function onAddEquity(symbol) {\n            return dispatch({\n              type: \"ADD_SYMBOL\",\n              payload: {\n                symbol: symbol\n              }\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }\n        });\n      }\n    });\n  }, [navigation]);\n  React.useEffect(function () {\n    var asyncEffect = function asyncEffect() {\n      var _iterator, _step, symbol, name, priceTrend, _await$fetchCurrentMa, close, change;\n\n      return _regeneratorRuntime.async(function asyncEffect$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iterator = _createForOfIteratorHelperLoose(symbols);\n\n            case 1:\n              if ((_step = _iterator()).done) {\n                _context.next = 15;\n                break;\n              }\n\n              symbol = _step.value;\n              name = companies[symbol == null ? void 0 : symbol.substring(0, 4)] || \"Empresa S/A\";\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetchPriceTrend(symbol));\n\n            case 6:\n              priceTrend = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(fetchCurrentMarketData(symbol));\n\n            case 9:\n              _await$fetchCurrentMa = _context.sent;\n              close = _await$fetchCurrentMa.close;\n              change = _await$fetchCurrentMa.change;\n              dispatch({\n                type: \"LOAD_EQUITY\",\n                payload: {\n                  symbol: symbol,\n                  name: name,\n                  marketData: {\n                    close: close,\n                    change: change,\n                    priceTrend: priceTrend\n                  }\n                }\n              });\n\n            case 13:\n              _context.next = 1;\n              break;\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    asyncEffect();\n  }, [symbols]);\n  return React.createElement(EquityListScreen, {\n    navigation: navigation,\n    data: symbols.map(function (symbol) {\n      return equities[symbol];\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction EquityListScreen(_ref2) {\n  var _this2 = this;\n\n  var navigation = _ref2.navigation,\n      data = _ref2.data;\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(EquityItem, {\n        symbol: item.symbol,\n        name: item.name,\n        marketData: item.marketData,\n        isLoading: item.isLoading,\n        onPress: function onPress() {\n          return navigation.navigate(\"Equity\", {\n            symbol: item.symbol\n          });\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.symbol;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/igor/Documentos/Programa de Formação Investtools/ReactNative/stock-tracker-aula/src/screens/EquityListScreen.tsx"],"names":["React","fetchCurrentMarketData","fetchPriceTrend","companies","AddEquityButton","EquityItem","useDispatch","useSelector","initialSymbols","EquityListContainer","navigation","state","equityList","symbols","equities","dispatch","useLayoutEffect","setOptions","headerRight","symbol","type","payload","useEffect","asyncEffect","name","substring","priceTrend","close","change","marketData","map","EquityListScreen","data","flex","styles","container","item","isLoading","navigate","StyleSheet","create"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,SAASC,sBAAT,EAAiCC,eAAjC;AAEA,OAAOC,SAAP;AACA,OAAOC,eAAP;AACA,OAAOC,UAAP;AAQA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,IAAMC,cAAc,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAvB;AAgBA,eAAe,SAASC,mBAAT,OAAmE;AAAA;;AAAA,MAApCC,UAAoC,QAApCA,UAAoC;;AAEhF,qBAA4BH,WAAW,CAAC,UAACI,KAAD;AAAA,WAA2BA,KAAK,CAACC,UAAjC;AAAA,GAAD,CAAvC;AAAA,MAAOC,OAAP,gBAAOA,OAAP;AAAA,MAAgBC,QAAhB,gBAAgBA,QAAhB;;AACA,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEAN,EAAAA,KAAK,CAACgB,eAAN,CAAsB,YAAM;AAC1BN,IAAAA,UAAU,CAACO,UAAX,CAAsB;AACpBC,MAAAA,WAAW,EAAE;AAAA,eACX,oBAAC,eAAD;AACE,UAAA,WAAW,EAAE,qBAACC,MAAD;AAAA,mBACXJ,QAAQ,CAAC;AAAEK,cAAAA,IAAI,EAAE,YAAR;AAAsBC,cAAAA,OAAO,EAAE;AAAEF,gBAAAA,MAAM,EAANA;AAAF;AAA/B,aAAD,CADG;AAAA,WADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADW;AAAA;AADO,KAAtB;AASD,GAVD,EAUG,CAACT,UAAD,CAVH;AAYAV,EAAAA,KAAK,CAACsB,SAAN,CAAgB,YAAM;AACpB,QAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0DACGV,OADH;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACPM,cAAAA,MADO;AAEVK,cAAAA,IAFU,GAEHrB,SAAS,CAACgB,MAAD,oBAACA,MAAM,CAAEM,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAAD,CAAT,IAAsC,aAFnC;AAAA;AAAA,+CAGSvB,eAAe,CAACiB,MAAD,CAHxB;;AAAA;AAGVO,cAAAA,UAHU;AAAA;AAAA,+CAIgBzB,sBAAsB,CAACkB,MAAD,CAJtC;;AAAA;AAAA;AAIRQ,cAAAA,KAJQ,yBAIRA,KAJQ;AAIDC,cAAAA,MAJC,yBAIDA,MAJC;AAKhBb,cAAAA,QAAQ,CAAC;AACPK,gBAAAA,IAAI,EAAE,aADC;AAEPC,gBAAAA,OAAO,EAAE;AAAEF,kBAAAA,MAAM,EAANA,MAAF;AAAUK,kBAAAA,IAAI,EAAJA,IAAV;AAAgBK,kBAAAA,UAAU,EAAE;AAAEF,oBAAAA,KAAK,EAALA,KAAF;AAASC,oBAAAA,MAAM,EAANA,MAAT;AAAiBF,oBAAAA,UAAU,EAAVA;AAAjB;AAA5B;AAFF,eAAD,CAAR;;AALgB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApB;;AAYAH,IAAAA,WAAW;AACZ,GAdD,EAcG,CAACV,OAAD,CAdH;AAgBA,SACE,oBAAC,gBAAD;AACE,IAAA,UAAU,EAAEH,UADd;AAEE,IAAA,IAAI,EAAEG,OAAO,CAACiB,GAAR,CAAY,UAACX,MAAD;AAAA,aAAmBL,QAAQ,CAACK,MAAD,CAA3B;AAAA,KAAZ,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD;;AAGD,SAASY,gBAAT,QAAsE;AAAA;;AAAA,MAA1CrB,UAA0C,SAA1CA,UAA0C;AAAA,MAA9BsB,IAA8B,SAA9BA,IAA8B;AACpE,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGI,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,UAAD;AACE,QAAA,MAAM,EAAEA,IAAI,CAACjB,MADf;AAEE,QAAA,IAAI,EAAEiB,IAAI,CAACZ,IAFb;AAGE,QAAA,UAAU,EAAEY,IAAI,CAACP,UAHnB;AAIE,QAAA,SAAS,EAAEO,IAAI,CAACC,SAJlB;AAKE,QAAA,OAAO,EAAE;AAAA,iBACP3B,UAAU,CAAC4B,QAAX,CAAoB,QAApB,EAA8B;AAAEnB,YAAAA,MAAM,EAAEiB,IAAI,CAACjB;AAAf,WAA9B,CADO;AAAA,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAFd;AAaE,IAAA,YAAY,EAAE,sBAACiB,IAAD;AAAA,aAAUA,IAAI,CAACjB,MAAf;AAAA,KAbhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAqBD;;AAED,IAAMe,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTF,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\n\nimport { View, StyleSheet, FlatList } from \"react-native\";\nimport { fetchCurrentMarketData, fetchPriceTrend } from \"../server\";\n\nimport companies from \"../utils/companies\";\nimport AddEquityButton from \"./AddEquityButton\";\nimport EquityItem from \"./EquityItem\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\n\nimport {equityListDuck} from \"../ducks/EquityListDuck\";\n\nimport { ApplicationState } from \"../store\";\n\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\n\nconst initialSymbols = [\"BRML3\", \"PETR4\", \"IGTA3\"];\n\nexport interface EquityData{\n  symbol:string\n  name?:string \n  marketData?:{close:number, change:number, priceTrend:number[]}\n  isLoading:boolean\n}\n  \n\ninterface EquityListScreenProps {\n  navigation: StackNavigationProp<any, any>\n  data:EquityData[]\n}\n\n\nexport default function EquityListContainer({ navigation }:EquityListScreenProps) {\n\n  const {symbols, equities} = useSelector((state:ApplicationState)=> state.equityList)\n  const dispatch = useDispatch()\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <AddEquityButton\n          onAddEquity={(symbol:string) =>\n            dispatch({ type: \"ADD_SYMBOL\", payload: { symbol } })\n          }\n        />\n      ),\n    });\n  }, [navigation]);\n\n  React.useEffect(() => {\n    const asyncEffect = async () => {\n      for (const symbol of symbols as string[]) {\n        const name = companies[symbol?.substring(0, 4)] || \"Empresa S/A\";\n        const priceTrend = await fetchPriceTrend(symbol);\n        const { close, change } = await fetchCurrentMarketData(symbol);\n        dispatch({\n          type: \"LOAD_EQUITY\",\n          payload: { symbol, name, marketData: { close, change, priceTrend } },\n        });\n      }\n    };\n\n    asyncEffect();\n  }, [symbols]);\n\n  return (\n    <EquityListScreen\n      navigation={navigation}\n      data={symbols.map((symbol:string) => equities[symbol])}\n    />\n  );\n}\n\n\nfunction EquityListScreen({ navigation, data }:EquityListScreenProps) {\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={styles.container}>\n        <FlatList\n          data={data}\n          renderItem={({ item }) => (\n            <EquityItem\n              symbol={item.symbol}\n              name={item.name}\n              marketData={item.marketData}\n              isLoading={item.isLoading}\n              onPress={() =>\n                navigation.navigate(\"Equity\", { symbol: item.symbol })\n              }\n            />\n          )}\n          keyExtractor={(item) => item.symbol}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}