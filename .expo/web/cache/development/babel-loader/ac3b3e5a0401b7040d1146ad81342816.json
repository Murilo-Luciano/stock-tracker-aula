{"ast":null,"code":"var _jsxFileName = \"/home/igor/Documentos/Programa de Forma\\xE7\\xE3o Investtools/ReactNative/stock-tracker-aula/src/screens/AppRoot.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport MainScreen from \"./MainScreen\";\nimport SignInScreen from \"./SignInScreen\";\nvar Stack = createStackNavigator();\nexport default function AppRoot() {\n  var _useSelector = useSelector(function (state) {\n    return state.authentication;\n  }),\n      authToken = _useSelector.authToken,\n      isLoading = _useSelector.isLoading;\n\n  var dispatch = useDispatch();\n  React.useEffect(function () {\n    var asyncEffect = function asyncEffect() {\n      var authToken;\n      return _regeneratorRuntime.async(function asyncEffect$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@auth_token\"));\n\n            case 3:\n              authToken = _context.sent;\n              _context.next = 8;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 8:\n              dispatch({\n                type: \"LOAD_TOKEN\",\n                token: authToken\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    asyncEffect();\n  }, []);\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, authToken == null ? React.createElement(Stack.Screen, {\n    name: \"SignIn\",\n    component: SignInScreen,\n    options: {\n      title: \"Login\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }) : React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: MainScreen,\n    options: {\n      header: function header() {\n        return null;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }));\n}","map":{"version":3,"sources":["/home/igor/Documentos/Programa de Formação Investtools/ReactNative/stock-tracker-aula/src/screens/AppRoot.tsx"],"names":["React","createStackNavigator","useDispatch","useSelector","AsyncStorage","MainScreen","SignInScreen","Stack","AppRoot","state","authentication","authToken","isLoading","dispatch","useEffect","asyncEffect","getItem","type","token","title","header"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AAKA,OAAOC,UAAP;AACA,OAAOC,YAAP;AAEA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;AAIA,eAAe,SAASO,OAAT,GAAkB;AAC7B,qBAA+BL,WAAW,CAAC,UAACM,KAAD;AAAA,WAA2BA,KAAK,CAACC,cAAjC;AAAA,GAAD,CAA1C;AAAA,MAAOC,SAAP,gBAAOA,SAAP;AAAA,MAAkBC,SAAlB,gBAAkBA,SAAlB;;AAEA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAGAF,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AACpB,QAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAIEX,YAAY,CAACY,OAAb,CAAqB,aAArB,CAJF;;AAAA;AAIhBL,cAAAA,SAJgB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAYlBE,cAAAA,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAE,YAAR;AAAsBC,gBAAAA,KAAK,EAAEP;AAA7B,eAAD,CAAR;;AAZkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApB;;AAeAI,IAAAA,WAAW;AACZ,GAjBD,EAiBG,EAjBH;AAwBA,SACI,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,SAAS,IAAI,IAAb,GACC,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAEL,YAFb;AAGE,IAAA,OAAO,EAAE;AACPa,MAAAA,KAAK,EAAE;AADA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAQC,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEd,UAFb;AAGE,IAAA,OAAO,EAAE;AAAEe,MAAAA,MAAM,EAAE;AAAA,eAAM,IAAN;AAAA;AAAV,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATN,CADJ;AAkBH","sourcesContent":["import React from \"react\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nimport {useDispatch, useSelector} from 'react-redux'\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { ApplicationState } from \"../store\";\n\nimport SplashScreen from './SplashScreen'\nimport MainScreen from \"./MainScreen\";\nimport SignInScreen from \"./SignInScreen\";\n\nconst Stack = createStackNavigator();\n\n\n\nexport default function AppRoot(){\n    const {authToken, isLoading} = useSelector((state:ApplicationState)=> state.authentication)\n\n    const dispatch = useDispatch()\n    \n\n    React.useEffect(() => {\n      const asyncEffect = async () => {\n        let authToken:string|null;\n  \n        try {\n          authToken = await AsyncStorage.getItem(\"@auth_token\");\n        } catch (e) {\n          // error\n        }\n  \n        // console.log(\"authToken\", authToken);\n        // await new Promise((r) => setTimeout(r, 1000));\n  \n        dispatch({ type: \"LOAD_TOKEN\", token: authToken });\n      };\n  \n      asyncEffect();\n    }, []);\n  \n    /* if (isLoading) {\n      return <SplashScreen />;\n    }\n */\n\n    return(\n        <Stack.Navigator>\n            {authToken == null ? (\n              <Stack.Screen\n                name=\"SignIn\"\n                component={SignInScreen}\n                options={{\n                  title: \"Login\"}}\n              />\n            ) : (\n              <Stack.Screen\n                name=\"Main\"\n                component={MainScreen}\n                options={{ header: () => null }}\n              />\n            )}\n        </Stack.Navigator>\n    )\n}"]},"metadata":{},"sourceType":"module"}